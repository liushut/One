%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.1.3

-ifndef(p11).
-define(p11, true).

-define(p11_gpb_version, "4.1.3").

-ifndef('CS_11004_PB_H').
-define('CS_11004_PB_H', true).
-record(cs_11004,
        {
        }).
-endif.

-ifndef('SC_11010_PB_H').
-define('SC_11010_PB_H', true).
-record(sc_11010,
        {playerId               :: integer(),       % = 1, 32 bits
         processData            :: binary()         % = 2
        }).
-endif.

-ifndef('SC_11011_PB_H').
-define('SC_11011_PB_H', true).
-record(sc_11011,
        {playerId               :: integer(),       % = 1, 32 bits
         playerScore            :: integer(),       % = 2, 32 bits
         resultData             :: binary(),        % = 3
         seeds = []             :: [integer()] | undefined % = 4, 32 bits
        }).
-endif.

-ifndef('CS_11002_PB_H').
-define('CS_11002_PB_H', true).
-record(cs_11002,
        {
        }).
-endif.

-ifndef('SC_11012_PB_H').
-define('SC_11012_PB_H', true).
-record(sc_11012,
        {result                 :: integer(),       % = 1, 32 bits
         winPlayerId            :: integer()        % = 2, 32 bits
        }).
-endif.

-ifndef('PLAYERINFO_PB_H').
-define('PLAYERINFO_PB_H', true).
-record(playerInfo,
        {playerId               :: integer(),       % = 1, 32 bits
         openId                 :: iolist(),        % = 2
         nickname               :: iolist(),        % = 3
         avatarUrl              :: iolist(),        % = 4
         isRobot                :: integer(),       % = 5, 32 bits
         gender                 :: integer(),       % = 6, 32 bits
         battleTimes            :: integer() | undefined % = 7, 32 bits
        }).
-endif.

-ifndef('CS_11013_PB_H').
-define('CS_11013_PB_H', true).
-record(cs_11013,
        {
        }).
-endif.

-ifndef('CS_11011_PB_H').
-define('CS_11011_PB_H', true).
-record(cs_11011,
        {playerScore            :: integer(),       % = 1, 32 bits
         resultData             :: binary()         % = 2
        }).
-endif.

-ifndef('CS_11010_PB_H').
-define('CS_11010_PB_H', true).
-record(cs_11010,
        {processData            :: binary()         % = 1
        }).
-endif.

-ifndef('SC_11002_PB_H').
-define('SC_11002_PB_H', true).
-record(sc_11002,
        {result                 :: integer(),       % = 1, 32 bits
         playerId               :: integer(),       % = 2, 32 bits
         openId                 :: iolist(),        % = 3
         seeds = []             :: [integer()] | undefined % = 4, 32 bits
        }).
-endif.

-ifndef('SC_11003_PB_H').
-define('SC_11003_PB_H', true).
-record(sc_11003,
        {readyTime              :: integer(),       % = 1, 32 bits
         playerInfos = []       :: [#playerInfo{}] | undefined % = 2
        }).
-endif.

-ifndef('CS_11012_PB_H').
-define('CS_11012_PB_H', true).
-record(cs_11012,
        {winPlayerId            :: integer()        % = 1, 32 bits
        }).
-endif.

-endif.
